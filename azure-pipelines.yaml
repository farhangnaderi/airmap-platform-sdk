name: "build-n-test"
trigger:
  branches:
    include:
      - "master"

variables:
  artifactDir: $(System.DefaultWorkingDirectory)/artifacts

jobs:
  - job: "release_from_master"
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
    timeoutInMinutes: 0
    pool:
      vmImage: "ubuntu-16.04"
    steps:
      - checkout: self
        clean: true
        lfs: true
        submodules: recursive
        persistCredentials: true
      - task: Docker@2
        displayName: ubuntu
        inputs:
          command: buildAndPush
          Dockerfile: docker/ubuntu
          buildContext: "."
          containerRegistry: airmapreg.acr
          repository: platform-sdk.ubuntu
          tags: |
            $(Build.SourceVersion)
      - task: Docker@2
        displayName: centos
        inputs:
          command: buildAndPush
          Dockerfile: docker/centos
          buildContext: "."
          containerRegistry: airmapreg.acr
          repository: platform-sdk.centos
          tags: |
            $(Build.SourceVersion)
  - job: "l4t_release"
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
    timeoutInMinutes: 0
    pool:
      vmImage: "ubuntu-20.04"
    steps:
      - checkout: self
        clean: true
        lfs: true
        submodules: recursive
        persistCredentials: true
      - bash:  |
          chmod +x ./tools/l4t/build-docker-image.sh
          ./tools/l4t/build-docker-image.sh
          chmod +x ./docker/extract_artifacts.sh
          ./docker/extract_artifacts.sh airmapreg.azurecr.io/platform-sdk.l4t:$(Build.SourceVersion) $(artifactDir)
  - job: "pr"
    condition: ne(variables['Build.SourceBranch'], 'refs/heads/master')
    timeoutInMinutes: 0
    pool:
      vmImage: "ubuntu-16.04"
    steps:
      - checkout: self
        clean: true
        lfs: true
        submodules: recursive
        persistCredentials: true
      - task: Docker@2
        displayName: ubuntu
        inputs:
          command: build
          Dockerfile: docker/ubuntu
          buildContext: "."
          containerRegistry: airmapreg.acr
          repository: platform-sdk.ubuntu
          tags: $(Build.SourceVersion)
      - bash: |
          chmod +x ./docker/extract_artifacts.sh
          ./docker/extract_artifacts.sh airmapreg.azurecr.io/platform-sdk.ubuntu:$(Build.SourceVersion) $(artifactDir)
      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: $(artifactDir)
          artifactName: airmap-platform-sdk-deb
      - task: Docker@2
        displayName: centos
        inputs:
          command: build
          Dockerfile: docker/centos
          buildContext: "."
      - task: Docker@2
        displayName: android
        inputs:
          command: build
          Dockerfile: docker/android
          buildContext: "."
